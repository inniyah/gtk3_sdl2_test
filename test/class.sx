class test {
	name;

	init (init_name) {
		name = init_name;
	}
	set_name (new_name) {
		name = new_name;
	}
	get_name () {
		return name;
	}
}

class child : test {
	init (init_name) {
		super (string::concat ('init ', init_name));
	}
	set_name (new_name) {
		name = string::concat ('child ', new_name);
	}
}

main () {
	a = new test ('abc');
	b = new child ('def');

	if (a == b) {
		printl ('== test failed');
		return 1;
	}

	if (a.get_name () != 'abc' || b.get_name () != 'init def') {
		printl ('get_name/set_name w/ init failed');
		return 1;
	}

	a.set_name ('test');
	b.set_name ('test');

	if (b.get_name () != 'child test' || a.get_name () != 'test') {
		printl ('get_name/set_name failed');
		return 1;
	}

	if (b isa array) {
		printl ('b isa array invalid');
	}

	if (! a isa test) {
		printl ('a isa test failed');
	}

	if (! b isa test) {
		printl ('b isa test failed');
	}

	if (! b isa child) {
		printl ('b isa child failed');
	}

	printl ('success');
}
